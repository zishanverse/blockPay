coco GovFundsMonitor

state persistent:
    allocations Map[String]Allocation   // Allocation's Name => Allocation

class Allocation:
    field purpose String           // Purpose of the allocation
    field amountAllocated U64      // Amount allocated by the government entity
    field amountSpent U64          // Amount spent from the allocation
    field creator Address
    field comments []Comment

class Comment:
    field commentator Address
    field comment String

////////////////////////
// Mutate Endpoints
///////////////////////

// Note: "!" required as suffix for mutate endpoints

endpoint deployer Init!():
    pass

// Create a new allocation
endpoint invokable CreateAllocations!(allocationName String, purpose String, amountAllocated U64):
    var creator = Address(Sender)
    if (amountAllocated <= 0):
        throw "Invalid Amount"

    var allocation = Allocation{
        purpose: purpose,
        amountAllocated: amountAllocated,
        creator: creator
    }

    mutate allocations <- GovFundsMonitor.State.allocations:
        allocations[allocationName] = allocation

// Update amount spent for an allocation
endpoint invokable UpdateAmountSpent!(allocationName String, amountSpent U64):
    var updater = Address(Sender)
    mutate allocations <- GovFundsMonitor.State.allocations:
        if (updater != allocations[allocationName].creator):
            throw "Not a creator of this allocation"
        if ((allocations[allocationName].amountSpent + amountSpent) > (allocations[allocationName].amountAllocated)):
            throw "Amount Spend exceed the amount allocated"
        
        allocations[allocationName].amountSpent += amountSpent

endpoint invokable AddComment!(allocationName String, comment String):
    var commentator = Address(Sender)
    mutate allocations <- GovFundsMonitor.State.allocations:
        var newComment = Comment{commentator: commentator, comment: comment} 
        allocations[allocationName].comments = append(allocations[allocationName].comments, newComment) 


////////////////////////

// Observe Endpoints
///////////////////////

// Note: No "!" required as suffix for observe endpoints

// Get all allocations
endpoint invokable GetAllocations()->(allocations Map[String]Allocation):
    observe allocations <- GovFundsMonitor.State.allocations

